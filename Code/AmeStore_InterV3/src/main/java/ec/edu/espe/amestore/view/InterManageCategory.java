package ec.edu.espe.amestore.view;

import com.mongodb.internal.connection.Connection;
import ec.edu.espe.amestore.model.Category;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.beans.Statement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class InterManageCategory extends javax.swing.JInternalFrame {

    private int idCategory;
    
    public InterManageCategory() {
        initComponents();
        this.setSize(600, 400);
        this.setTitle("Manage Category");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_category = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_update = new javax.swing.JButton();
        jButton_delete = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_description = new javax.swing.JTextField();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Administrar Categoria");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 15, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable_category.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable_category);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 300, 270));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 330, 290));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton_update.setBackground(new java.awt.Color(51, 255, 51));
        jButton_update.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton_update.setText("Update");
        jButton_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_updateActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 100, -1));

        jButton_delete.setBackground(new java.awt.Color(255, 0, 0));
        jButton_delete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton_delete.setText("Delete");
        jButton_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_deleteActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 100, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 70, 230, 70));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Descripcion");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, -1, -1));
        jPanel3.add(txt_description, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 200, 60));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 170, 220, 180));

        jLabel_wallpaper.setForeground(new java.awt.Color(255, 153, 153));
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 6, 690, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_updateActionPerformed
        if(!txt_description.getText().isEmpty()){
        
            Category category = new Category();
            
            category.setDescription(txt_description.getText().trim());
            if(!category.(category, idCategory)){
                    JOptionPane.showConfirmDialog(null, "Categoria Actualizada");
                    txt_description.setText("");
                    this.loadCategoryTable();
                    
            }else{
                JOptionPane.showMessageDialog(null, "Error al actualizar Categoria");   
            }
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione una categoria");
        }
    }//GEN-LAST:event_jButton_updateActionPerformed

    private void jButton_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_deleteActionPerformed
       
        if(!txt_description.getText().isEmpty()){
            Category category = new Category();
           Ctrl_Category controlCategory = new Ctrl_Category();
            
            category.setDescription(txt_description.getText().trim());
            if(!controlCategory.delete(idCategory)){
                    JOptionPane.showConfirmDialog(null, "Categoria Eliminda");
                    txt_description.setText("");
                    this.loadCategoryTable();
                    
            }else{
                JOptionPane.showMessageDialog(null, "Error al eliminar Categoria");   
            }
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione una categoria");
        }
    }                                              
        
    }//GEN-LAST:event_jButton_deleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_delete;
    private javax.swing.JButton jButton_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable_category;
    private javax.swing.JTextField txt_description;
    // End of variables declaration//GEN-END:variables
private void 
loadCategoryTable(){
    Connection con = Conexion.conectar();
    DefaultTableModel model = new DefaultTableModel();
    String sql = "";
    Statement st;
    
    try {
        st = con.createStatement();
        ResulSet rs = st.executeQuery(sql);
        InterManageCategory.jTable_category = new JTable(model);
        InterManageCategory.jScrollPane1.setViewport(InterManageCategory.jTable_category);
          
        model.addColumn("idCategory");
        model.addColumn("description");
        model.addColumn("status");
        
        while(rs.next()){
            Object fila[] = new Object[3];
            
            for(int i =0; i < 3; i++){
                fila[i] = rs.getObject (i + 1);
            }
            model.addRow(fila);
        }
        con.close();
    
    } catch(SQLException e){
          System.out.println("Error al llenar la tabla categorias: " + e);
    }
    
    jTable_category.addMouseListener(new MouseAdapter(){
        @Override    
        public void mouseClicked(MouseEvent e){
            int fila_point = jTable_category.rowAtPoint(e.getPoint());
            int columna_point = 0;
            
            if(fila_point > -1){
                idCategory = (int) model.getValueAt(fila_point, columna_point);
                SendDataCategorySelected (idCategory);
            }
         }
    });
 }
private void SendDataCategorySelected(idCategory){
    try {
        Connection con = Conexion.conectar();
        PreparedStatement pst = con.prepareStatement(
        "select * from tb_category where idCategory = '" + idCategory + "'");
        ResultSet rs = pst.executeQuery();
        
        
        if(rs.next()){
            txt_description.setText(rs.getString("description"));
        }
        con.close();
    }catch (SQLException e){
        System.out.println("Error al seleccionar categoria" + e);
}}

}
